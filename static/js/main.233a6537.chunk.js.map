{"version":3,"sources":["components/home/Home.js","components/result/Result.js","components/Disclaimer.js","components/Main.js","App.js","index.js"],"names":["Home","setIsResponse","setResponse","setLoading","useState","article","setArticle","Container","fluid","className","Form","onSubmit","e","length","a","console","log","axios","post","data","result","preventDefault","makePrediction","FormGroup","value","onChange","target","handleInput","cols","rows","style","borderRadius","Button","block","outline","color","Result","loading","response","src","alt","onClick","Disclaimer","modal","setModal","toggle","position","top","right","cursor","width","height","viewBox","class","fill","xmlns","fill-rule","d","cx","cy","r","Modal","isOpen","centered","ModalHeader","ModalBody","Main","isResponse","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.233a6537.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Form, Button, FormGroup } from 'reactstrap';\nimport axios from 'axios';\n\nexport default function Home({ setIsResponse, setResponse, setLoading }) {\n\n    // Init input data state\n    const [article, setArticle] = useState('');\n\n    // Handle input change\n    const handleInput = (e) => {\n        setArticle(() => e.target.value)\n    }\n\n    // Handle POST request to the API\n    const makePrediction = (e) => {\n        if (article.length > 0) {\n            (async () => {\n                try {\n                    // Set the page to loading\n                    setLoading(() => true);\n                    // Change page view\n                    setIsResponse(() => true);\n\n                    console.log('Predicting...');\n                    \n                    // Make request to the API\n                    const result = await axios.post('https://cors-anywhere.herokuapp.com/https://app-fake-news-detector.herokuapp.com/', { data: article })\n\n                    // Set the page to not loading\n                    setLoading(() => false);\n                    // Set the response given by the API\n                    setResponse(() => result);\n\n                    console.log('Done.')\n                } catch (error) {\n                    // Set the page to not loading\n                    setLoading(() => false);\n                    // Return error in the console\n                    console.log('Something went wrong...');\n                    console.log(error);\n                }\n              })();\n            }\n            \n        e.preventDefault();\n    }\n\n\n    return (\n        <Container fluid className=\"d-flex align-items-center justify-content-center flex-column\">\n            <h4 className=\"mb-4 text-light\">Paste Below the Article Corpus</h4>\n            <Form onSubmit={(e) => makePrediction(e)} className=\"text-center mb-5\">\n                <FormGroup>\n                    <textarea value={article} onChange={(e) => handleInput(e)} cols={50} rows={10} style={{ borderRadius: '20px' }}></textarea>\n                </FormGroup>\n                <Button block outline color=\"info\" className=\"text-center\">IS IT FAKE?</Button>\n            </Form>\n        </Container>\n    )\n}\n","import React from 'react';\nimport { Button, Container } from 'reactstrap';\n\nexport default function Result({ setIsResponse, loading, response }) {\n\n    return (\n        <Container fluid className=\"d-flex align-items-center justify-content-center flex-column\">\n            {\n                loading\n                ?\n                    <>\n                        <h2 className=\"text-light\">Loading...</h2>\n                        <img src=\"https://webstockreview.net/images/robot-clipart-animation-10.gif\" alt=\"\"/>\n                    </>\n                :\n                    <>\n                        {\n                            response\n                            ?\n                                <h4 className=\"text-light mb-5\">{response.data}</h4>\n                            :\n                                <h4 className=\"text-light mb-5\">It seems that something went wrong. Please try again</h4>\n                        }\n                        <Button color=\"primary\" outline onClick={() => setIsResponse(() => false)}>Check another news</Button>\n                    </>\n            }\n        </Container>\n    )\n}\n","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nexport default function Disclaimer() {\n\n    // Init modal state\n    const [modal, setModal] = useState(false);\n\n    // Open modal function\n    const toggle = () => setModal(!modal);\n\n    return (\n        <>\n            <svg onClick={toggle} style={{ position: 'absolute', top: '1rem', right: '1rem', cursor: 'pointer', color: '#17a2b8' }} width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" class=\"bi bi-info-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\n                <path d=\"M8.93 6.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588z\" />\n                <circle cx=\"8\" cy=\"4.5\" r=\"1\" />\n            </svg>\n\n            <Modal isOpen={modal} toggle={toggle} centered>\n                <ModalHeader toggle={toggle} className=\"text-center\">Disclaimer and How to use</ModalHeader>\n                <ModalBody>\n                    This app gives prediction with accuracy of around 90%, however fake news are way more complex that whar currently the model is able to understan and any result should not be taken as pure truth.\n                <br />\n                    <br />\n                How to use:\n                <ul>\n                        <li>Paste the text and the title of the article inside the form</li>\n                        <li>Press the button</li>\n                        <li>And wait for a result!</li>\n                    </ul>\n                    <Button color=\"danger\" block outline onClick={toggle} className=\"mt-4\">Close</Button>\n                </ModalBody>\n            </Modal>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'reactstrap'\n\n// Components\nimport Home from './home/Home';\nimport Result from './result/Result';\nimport Disclaimer from './Disclaimer';\n\nexport default function Main() {\n\n    // Init states\n    const [isResponse, setIsResponse] = useState(false);    // State for which page to show\n    const [response, setResponse] = useState(null);         // State for the response from the API\n    const [loading, setLoading] = useState(null);           // State for the wait of the response\n\n    return (\n        <Container fluid style={{ height: '100vh', width: '100vw' }} className=\"d-flex align-items-center justify-content-center bg-dark\">\n            <Disclaimer />\n            {\n                !isResponse\n                ?\n                    <Home setIsResponse={setIsResponse} setResponse={setResponse} setLoading={setLoading} />\n                :\n                    <Result setIsResponse={setIsResponse} loading={loading} response={response} />\n            }\n        </Container>\n    )\n}\n","import React from 'react';\n\n// Components\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>      \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}